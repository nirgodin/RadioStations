import asyncio
import os

from aiohttp import ClientSession

from consts.api_consts import CREATE_PLAYLIST_URL_FORMAT
from data_collection.spotify.spotify_scope import SpotifyScope
from tools.environment_manager import EnvironmentManager
from utils.spotify_utils import build_spotify_headers


class PlaylistsCreator:
    async def create(self):
        EnvironmentManager().set_env_variables()
        headers = build_spotify_headers(
            is_authorization_token=True,
            scopes=(
                SpotifyScope.PLAYLIST_MODIFY_PUBLIC,
                SpotifyScope.PLAYLIST_MODIFY_PRIVATE
            )
        )
        user_id = os.environ['SPOTIFY_USER_ID']
        url = CREATE_PLAYLIST_URL_FORMAT.format(user_id)
        body = {
            "name": "My second automatic playlist",
            "description": "Generated by playlist.ai",
            "public": True
        }

        async with ClientSession(headers=headers) as session:
            async with session.post(url=url, json=body) as raw_response:
                response = await raw_response.json()

        print('b')


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(PlaylistsCreator().create())
